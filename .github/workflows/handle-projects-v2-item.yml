name: Handle Webhook Events

on:
  repository_dispatch:
    types: [custom_event]  # This is the custom event type you will trigger

jobs:
  notify_slack:
    runs-on: ubuntu-latest
    steps:
      - name: Send event details to Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # Your Slack Webhook URL
        run: |
          # Load the event data from the incoming request
          EVENT_DATA='${{ toJson(github.event.client_payload) }}'  # Use toJson to get the payload as a string

          # Extract action and changes from the event
          ACTION=$(echo "$EVENT_DATA" | jq -r .action)
          FROM=$(echo "$EVENT_DATA" | jq -r .changes.field_value.from)
          TO=$(echo "$EVENT_DATA" | jq -r .changes.field_value.to)

          # Set message content based on the action
          if [[ "$ACTION" == "edited" ]]; then
            MESSAGE="A Project V2 item was moved from '$FROM' to '$TO'."
          elif [[ "$ACTION" == "deleted" ]]; then
            MESSAGE="A Project V2 item has been deleted."
          elif [[ "$ACTION" == "created" ]]; then
            MESSAGE="A new Project V2 item has been created."
          else
            MESSAGE="A Project V2 item was updated."
          fi

          # Send the formatted message to Slack
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"GitHub Projects V2 Update", "blocks":[{"type":"section","text":{"type":"mrkdwn","text":"'"$MESSAGE"'"}}]}' \
          "$SLACK_WEBHOOK_URL"
